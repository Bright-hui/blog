(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{307:function(e,n,s){"use strict";s.r(n);var t=s(14),o=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"js事件循环机制-宏任务和微任务是如何工作的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js事件循环机制-宏任务和微任务是如何工作的"}},[e._v("#")]),e._v(" js事件循环机制-宏任务和微任务是如何工作的?")]),e._v(" "),n("ol",[n("li",[e._v("同步任务直接执行")]),e._v(" "),n("li",[e._v("遇到微任务放到微任务队列(Promise.then Promise.nextTick)")]),e._v(" "),n("li",[e._v("遇到宏任务放到宏任务队列(setTimeout/setInterval)")]),e._v(" "),n("li",[e._v("首先执行完所有的同步任务")]),e._v(" "),n("li",[e._v("然后执行微任务队列中的任务, 如果执行过程中遇到宏任务，放入宏任务队队列。等所有的微任务执行完，最后执行宏任务队列中的任务")]),e._v(" "),n("li",[e._v("执行宏任务队列中的任务")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("console.log(1);\nPromise.resolve().then(() => {\n  console.log(2);\n  setTimeout(() => {\n    console.log(3)\n  }, 0);\n});\nsetTimeout(()=> {\n  console.log(4);\n  new Promise((resolve) => {\n    console.log(5)\n    resolve()\n  }).then(() => {\n    console.log(6)\n  })\n},0);\n\n//1 2 4 5 6 3\n\n")])])])])}),[],!1,null,null,null);n.default=o.exports}}]);