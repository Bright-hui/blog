(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{310:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"props和state的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#props和state的区别"}},[t._v("#")]),t._v(" props和state的区别")]),t._v(" "),s("ol",[s("li",[t._v("props 传递的参数到函数。比如form 传递color 到button组件。")]),t._v(" "),s("li",[t._v("state 是组件的数据。它可以让组件对一些信息保持追踪。比如button按钮记录点击次数\n思考？ 父组件通过，props 传递给子组件,但是props的值每次都需要计算。再展示在页面中。重新计算的这个逻辑应该放在哪里？")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Avatar({ person, size }) {\n  let thumbnailSize = 's';\n  if (size * ratio > 90) {\n    thumbnailSize = 'b';\n  }\n  return (\n    <img\n      className=\"avatar\"\n      src={getImageUrl(person, thumbnailSize)}\n      alt={person.name}\n      width={size}\n      height={size}\n    />\n  );\n}\n")])])]),s("p",[t._v("Props 可以让你将这样的逻辑封装在 Avatar 组件中（并在需要时进行更改），以便每个人都可以使用 Avatar 组件，而不必考虑如何请求和调整图像大小。")])])}),[],!1,null,null,null);s.default=e.exports}}]);